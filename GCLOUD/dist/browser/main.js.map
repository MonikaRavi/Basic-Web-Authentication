{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth/auth.service.ts","webpack:///./src/app/auth/http.service.ts","webpack:///./src/app/auth/login/login.component.css","webpack:///./src/app/auth/login/login.component.html","webpack:///./src/app/auth/login/login.component.ts","webpack:///./src/app/auth/microsoft.service.ts","webpack:///./src/app/auth/signup/signup.component.css","webpack:///./src/app/auth/signup/signup.component.html","webpack:///./src/app/auth/signup/signup.component.ts","webpack:///./src/app/auth/social.service.ts","webpack:///./src/app/auth/social/social.component.css","webpack:///./src/app/auth/social/social.component.html","webpack:///./src/app/auth/social/social.component.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/routes/app-routing.module.ts","webpack:///./src/app/routes/auth-guard.service.ts","webpack:///./src/app/shared/app.config.ts","webpack:///./src/app/shared/image.service.ts","webpack:///./src/app/shared/ms-user-detail.service.ts","webpack:///./src/app/shared/ms-user.service.ts","webpack:///./src/app/shared/user.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-header></app-header>\\r\\n\\r\\n<router-outlet></router-outlet>\"","import { Component, OnInit } from '@angular/core';\n\nimport * as firebase from 'firebase';\n\nimport * as firebaseui from 'firebaseui'\nimport { MicrosoftService } from './auth/microsoft.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'app';\n\n\n  constructor(private microsoft: MicrosoftService) { }\n\n  ngOnInit() {\n\n    // Initializing Auth Applications - Microsoft for Windows and Firebase for other Social Applications\n\n    firebase.initializeApp({\n      apiKey: \"AIzaSyC75sUhp7rb4IwAFZ3iwxfh5RxiMZWZYnc\",\n      authDomain: \"projauthentication.firebaseapp.com\",\n    });\n\n    this.microsoft.initAuth();\n\n  }\n\n}\n","//SYSTEM MODULES\r\n\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClient, HttpClientModule } from \"@angular/common/http\";\r\n\r\n// COMPONENT MODULES\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { LoginComponent } from './auth/login/login.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { SocialComponent } from './auth/social/social.component';\r\nimport { SignupComponent } from './auth/signup/signup.component';\r\n\r\n// ROUTES\r\n\r\nimport { AuthGuard } from './routes/auth-guard.service';\r\nimport { AppRoutingModule } from './routes/app-routing.module';\r\n\r\n//SERVICES\r\n\r\nimport { AuthService } from './auth/auth.service';\r\nimport { SocialService } from './auth/social.service';\r\nimport { MicrosoftService } from './auth/microsoft.service';\r\nimport { MSuserService } from './shared/ms-user.service';\r\nimport { ImageService } from './shared/image.service';\r\nimport { MsUserDetailService } from './shared/ms-user-detail.service';\r\nimport { HttpService } from './auth/http.service';\r\nimport { UserService } from './shared/user.service';\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HeaderComponent,\r\n    LoginComponent,\r\n    SignupComponent,\r\n    HomeComponent,\r\n    SocialComponent\r\n\r\n\r\n  ],\r\n  imports: [\r\n    BrowserModule.withServerTransition({ appId: 'my-login-app' }),\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    CommonModule,\r\n    HttpClientModule,\r\n    AppRoutingModule\r\n\r\n  ],\r\n  providers: [\r\n    AuthService,\r\n    AuthGuard,\r\n    UserService,\r\n    SocialService,\r\n    MicrosoftService,\r\n    MSuserService,\r\n    ImageService,\r\n    MsUserDetailService,\r\n    HttpService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { \r\n\r\n  \r\n\r\n}\r\n","import { Injectable } from '@angular/core';\n\nimport * as firebase from 'firebase';\nimport { Router } from '@angular/router';\nimport { UserService } from '../shared/user.service';\nimport * as hello from 'hellojs/dist/hello.all.js';\n\nimport * as window from 'window' ;\n\n\n\n@Injectable()\n\nexport class AuthService {\n\n  errorMessage = '';\n\n  userEmail: string;\n\n  authenticated = false;\n\n  isFirebaseUsed = false;\n\n  isMicrosoftUsed = false;\n\n  constructor(private router: Router) {\n\n\n\n  }\n\n  setFirebaseUse() {\n\n    // console.log('setFirebaseUse');\n\n    this.isFirebaseUsed = true;\n    this.isMicrosoftUsed = false;\n\n  }\n\n  setMSuse() {\n\n    //console.log('setMSuse');\n\n    this.isFirebaseUsed = false;\n    this.isMicrosoftUsed = true;\n\n  }\n\n  getFirebaseUse() {\n\n    //console.log('FB Used? ', this.isFirebaseUsed)\n\n    return this.isFirebaseUsed;\n  }\n\n  getMSuse() {\n\n    //console.log('MS USed? ', this.isMicrosoftUsed) ;\n\n    return this.isMicrosoftUsed;\n\n  }\n\n\n  signInUser(email: string, password: string) {\n\n    this.setFirebaseUse();\n\n    firebase.auth().signInWithEmailAndPassword(email, password)\n      .then(\n        response => {\n\n          this.setAuthentication();\n\n        }\n      )\n      .catch(\n        error => {\n\n          this.errorMessage = error.message;\n\n\n        }\n      )\n\n\n  }\n\n  signUpUser(email: string, password: string, name: string , photoUrl : string) {\n\n    firebase.auth().createUserWithEmailAndPassword(email, password)\n      .then(\n        response => {\n\n\n          this.setUserProfile(name, photoUrl);\n\n        }\n      )\n      .catch(\n        error => {\n\n          this.setError(error.message);\n\n        }\n      )\n\n\n  }\n\n  setUserProfile(name: string , picUrl : string) {\n\n    firebase.auth().currentUser\n      .updateProfile(\n        {\n          displayName: name,\n          photoURL: picUrl\n        }\n\n      ).then(\n        () => {\n          this.logOut();\n        }\n      ).catch(\n\n        (error) => console.log(error)\n\n      );\n\n\n  }\n\n\n  setError(message: string) {\n\n    this.errorMessage = message;\n\n  }\n\n\n  getError() {\n\n    return this.errorMessage;\n\n  }\n\n\n\n  isAuthenticated() {\n\n    return this.authenticated;\n  }\n\n  setAuthentication() {\n\n    this.authenticated = true;\n    this.router.navigate(['/home']);\n\n  }\n\n  logOut() {\n\n\n    if (this.isFirebaseUsed) {\n      firebase.auth().signOut();\n\n    } else {\n\n      //Logout from Microsoft\n\n      hello('msft').logout();\n\n    }\n\n    this.isFirebaseUsed = false;\n\n    this.isMicrosoftUsed = false;\n\n    this.authenticated = false;\n    this.router.navigate(['/']);\n\n    //console.log('LOGOUT');\n\n  }\n\n  deleteUser() {\n\n\n    if (this.isFirebaseUsed) {\n      firebase.auth().currentUser.delete();\n    }\n\n    this.logOut();\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Headers } from '@angular/http';\nimport * as hello from 'hellojs/dist/hello.all.js';\n\nimport * as window from 'window' ;\n\n\n@Injectable()\nexport class HttpService {\n  getAccessToken() {\n    const msft = hello('msft').getAuthResponse();\n    const accessToken = msft.access_token;\n    return accessToken;\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\" style=\\\"margin-top:30px\\\">\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n\\r\\n    <div class=\\\"col-xs-12 col-sm-10 col-md-8 col-sm-offset-1 col-md-offset-2\\\">\\r\\n\\r\\n      <form (ngSubmit)=\\\"onSubmit(f)\\\" #f=\\\"ngForm\\\">\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n\\r\\n          <label for=\\\"email\\\">Email</label>\\r\\n          <input type=\\\"text\\\" name=\\\"email\\\" id=\\\"email\\\" class=\\\"form-control\\\" ngModel required #email=\\\"ngModel\\\">\\r\\n          <span class=\\\"help-block text-warning\\\" *ngIf=\\\"!email.valid && email.touched\\\">Please enter a valid email!</span>\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n\\r\\n          <label for=\\\"password\\\">Password</label>\\r\\n          <input type=\\\"password\\\" name=\\\"password\\\" id=\\\"password\\\" class=\\\"form-control\\\" ngModel required #password=\\\"ngModel\\\">\\r\\n          <span class=\\\"help-block text-warning\\\" *ngIf=\\\"!password.valid && password.touched\\\"> Password should be atleast 6 characters long </span>\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" [disabled]=\\\"!f.valid\\\">Login</button>\\r\\n\\r\\n        <br>\\r\\n        <br>\\r\\n\\r\\n        <div style=\\\"color: red\\\">\\r\\n          {{ error }}\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n      </form>\\r\\n\\r\\n\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n    <div class=\\\"col-xs-5 col-sm-3\\\">\\r\\n\\r\\n\\r\\n      <app-social></app-social>\\r\\n\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\nimport { NgForm } from '@angular/forms'\nimport { AuthService } from '../auth.service';\nimport { SocialService } from '../social.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n\n  email : string;\n\n  password: string;\n\n  error : string;\n\n  constructor(private authService: AuthService) { }\n\n  ngOnInit() {\n\n    this.authService.errorMessage = '';\n\n  }\n\nonSubmit(form: NgForm){\n\n  this.email = form.value.email;\n\n  this.password = form.value.password;\n\n  //  console.log('email', this.email );\n  // console.log('password', this.password );\n\nthis.authService.signInUser(this.email, this.password);\n\nsetTimeout(() => {\n  this.error = this.authService.getError();\n}, 500);\n\n}\n\n\n\n}\n","import { Injectable ,NgZone } from '@angular/core';\n\nimport { Router } from '@angular/router';\n\nimport * as hello from 'hellojs/dist/hello.all.js';\n\nimport { config } from '../shared/app.config';\nimport { AuthService } from './auth.service';\nimport { UserService } from '../shared/user.service';\nimport { MsUserDetailService } from '../shared/ms-user-detail.service';\n\nimport * as window from 'window' ;\n\n\n// HANDLES LOGIN \n\n@Injectable()\nexport class MicrosoftService {\n\n  constructor(private zone: NgZone , private router : Router, \n                  private authService: AuthService, private userDetailMs : MsUserDetailService) { }\n\n\n\n  //Initializing Microsoft Developer App to use for Authentication\n\n  initAuth() {\n    hello.init({\n        msft: {\n          id: config.appId,\n          oauth: {\n            version: 2,\n            auth: 'https://login.microsoftonline.com/common/oauth2/v2.0/authorize'\n          },\n          scope_delim: ' ',\n          form: false\n        },\n      }\n      // ,\n      // { redirect_uri:  ''  //window.location.href \n      \n      // }\n    );\n\n    // console.log('Microsoft Initialized')\n  }\n\n//Login\n\n  login() {\n    \n     //console.log('set MSUSE');\n\n    this.authService.setMSuse();\n\n    hello('msft').login({ scope: config.scope }).then(\n      () => {\n        \n        this.zone.run(() => {\n         this.userDetailMs.getMeMs();\n          this.authService.setAuthentication();\n          \n        });\n      },\n      e => console.error(e.error.message)\n    );\n\n    \n  }\n\n //LogOut from Microsoft Handled in AuthService\n\n\n //Access Token\n\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\" style=\\\"margin-top:30px\\\">\\n\\n  <div class=\\\"row\\\">\\n\\n    <div class=\\\"col-xs-12 col-sm-10 col-md-8 col-sm-offset-1 col-md-offset-2\\\">\\n\\n      <form (ngSubmit)=\\\"onSubmit(f)\\\" #f=\\\"ngForm\\\">\\n\\n        <h3>Profile Information</h3>\\n\\n        <div class=\\\"form-group\\\">\\n\\n          <label for=\\\"name\\\">Name</label>\\n          <input type=\\\"text\\\" name=\\\"name\\\" id=\\\"name\\\" class=\\\"form-control\\\" ngModel required #name=\\\"ngModel\\\">\\n          <span class=\\\"help-block text-warning\\\" *ngIf=\\\"!name.valid && name.touched\\\">Please enter a valid User Name!</span>\\n\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n\\n          <label for=\\\"photo\\\">Photo Url</label>\\n          <input type=\\\"text\\\" name=\\\"photo\\\" id=\\\"photo\\\" class=\\\"form-control\\\" ngModel required #photo=\\\"ngModel\\\">\\n          <span class=\\\"help-block text-warning\\\" *ngIf=\\\"!photo.valid && photo.touched\\\">Please enter a valid Url!</span>\\n\\n        </div>\\n\\n        <h3>Login Credentials</h3>\\n\\n        <div class=\\\"form-group\\\">\\n\\n          <label for=\\\"email\\\">Email</label>\\n          <input type=\\\"text\\\" name=\\\"email\\\" id=\\\"email\\\" class=\\\"form-control\\\" ngModel required #email=\\\"ngModel\\\">\\n          <span class=\\\"help-block text-warning\\\" *ngIf=\\\"!email.valid && email.touched\\\">Please enter a valid email!</span>\\n\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n\\n          <label for=\\\"password\\\">Password</label>\\n          <input type=\\\"password\\\" name=\\\"password\\\" id=\\\"password\\\" class=\\\"form-control\\\" ngModel required #password=\\\"ngModel\\\">\\n          <span class=\\\"help-block text-warning\\\" *ngIf=\\\"!password.valid && password.touched\\\"> Password should be atleast 6 characters long </span>\\n\\n        </div>\\n\\n        <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" [disabled]=\\\"!f.valid\\\">SignUp</button>\\n\\n        <br>\\n        <br>\\n\\n        <div style=\\\"color: red\\\">\\n          {{ error }}\\n        </div>\\n\\n\\n\\n      </form>\\n\\n    </div>\\n\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n\n  email : string;\n\n  password: string;\n\n  name : string;\n\n  photoUrl : string;\n\n  error : string;\n\n  constructor(private authService: AuthService) { }\n\n  ngOnInit() {\n\n    this.error = ''\n\n  }\n\n  onSubmit(form: NgForm){\n\n    this.email = form.value.email;\n  \n    this.password = form.value.password;\n  \n    this.name = form.value.name;\n\n    this.photoUrl = form.value.photo;\n\n    // console.log('email', this.email );\n    // console.log('password', this.password );\n  \n  this.authService.signUpUser(this.email, this.password, this.name , this.photoUrl);\n  \n  setTimeout(() => {\n    this.error = this.authService.getError();\n  }, 500);\n  \n  }\n  \n\n}\n","import { Injectable, NgZone } from '@angular/core';\n\nimport * as firebase from 'firebase';\nimport { AuthService } from './auth.service';\nimport { MicrosoftService } from './microsoft.service';\n\n\n@Injectable()\nexport class SocialService {\n\n  constructor(private authService: AuthService, private zone: NgZone) { }\n\n  provider;\n\n  error: string = '';\n\n\n\n  setProvider(provider: string) {\n\n    this.authService.setFirebaseUse();\n\n    this.provider = null;\n\n    // console.log(provider);\n\n    switch (provider) {\n\n      case 'google':\n\n        this.provider = new firebase.auth.GoogleAuthProvider();\n\n        break;\n\n      case 'twitter':\n\n        this.provider = new firebase.auth.TwitterAuthProvider();\n        break;\n\n      case 'facebook':\n\n        this.provider = new firebase.auth.FacebookAuthProvider();\n        break;\n\n      case 'github':\n\n        this.provider = new firebase.auth.GithubAuthProvider();\n        break;\n\n\n\n    }\n\n\n\n\n    this.socialSignIn();\n\n\n\n  }\n\n\n  socialSignIn() {\n\n    //console.log('Provider ', this.provider);\n\n    firebase.auth().signInWithPopup(this.provider).\n      then(\n        (result) => {\n\n          //console.log(result);\n\n          // This gives you a Google Access Token. You can use it to access the Google API.\n          //var token = result.credential.accessToken;\n          // The signed-in user info.\n          var user = result.user;\n\n          //console.log('User ', user);\n\n          firebase.auth().currentUser.getIdToken().then(\n\n            (response) => {\n\n              this.zone.run(\n\n                () => {\n\n                  this.authService.setAuthentication();\n                }\n\n              )\n\n            }\n\n          )\n\n\n          // ...\n        })\n      .catch(\n        (error) => {\n\n          console.log('Error ', error);\n\n          // Handle Errors here.\n          var errorCode = error.code;\n          var errorMessage = error.message;\n          // The email of the user's account used.\n          var email = error.email;\n          // The firebase.auth.AuthCredential type that was used.\n          var credential = error.credential;\n          // ...\n\n          this.error = errorMessage;\n\n          this.authService.setError(errorMessage);\n\n        });\n\n\n\n  }\n\n\n}\n\n\n","module.exports = \"\"","module.exports = \"<div>\\n\\n  <h5> Or Login using Social Media</h5>\\n\\n  <a class=\\\"btn btn-block btn-social btn-google\\\" style=\\\"color: white\\\" (click)=\\\"socialSign('google')\\\">\\n    <span class=\\\"fa fa-google\\\"></span> Sign in with Google\\n  </a>\\n\\n  <a class=\\\"btn btn-block btn-social btn-facebook\\\" style=\\\"color: white\\\" (click)=\\\"socialSign('facebook')\\\">\\n    <span class=\\\"fa fa-facebook\\\"></span> Sign in with Facebook\\n  </a>\\n\\n  <a class=\\\"btn btn-block btn-social btn-twitter\\\" style=\\\"color: white\\\" (click)=\\\"socialSign('twitter')\\\">\\n    <span class=\\\"fa fa-twitter\\\"></span> Sign in with Twitter\\n  </a>\\n\\n  <a class=\\\"btn btn-block btn-social btn-github\\\" style=\\\"color: white\\\" (click)=\\\"socialSign('github')\\\">\\n      <span class=\\\"fa fa-github\\\"></span> Sign in with Github\\n    </a>\\n\\n     <a class=\\\"btn btn-block btn-social btn-microsoft\\\" style=\\\"color: white\\\" (click)=\\\"windowsSign()\\\">\\n        <span class=\\\"fa fa-windows\\\"></span> Sign in with Microsoft\\n      </a> \\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { SocialService } from '../social.service';\n\nimport * as hello from 'hellojs/dist/hello.all.js'\nimport { MicrosoftService } from '../microsoft.service';\nimport * as window from 'window' ;\n\n\n\n@Component({\n  selector: 'app-social',\n  templateUrl: './social.component.html',\n  styleUrls: ['./social.component.css']\n \n})\nexport class SocialComponent implements OnInit {\n\n  state = 'final';\n\n  start = false;\n\n  constructor(private socialService: SocialService, private microsoft: MicrosoftService) { }\n\n  ngOnInit() {\n\n\n\n  }\n\n  socialSign(provider: string) {\n\n\n\n    this.socialService.setProvider(provider);\n\n\n\n  }\n\n  windowsSign() {\n\n    //console.log('Microsoft Logged In');\n\n    this.microsoft.login();\n\n  }\n\n \n\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-sm bg-dark navbar-dark\\\">\\n\\n    <div class=\\\"container-fluid\\\">\\n\\n        <div class=\\\"navbar-header\\\">\\n\\n            <a class=\\\"nav navbar-brand\\\" style=\\\"color: white\\\">Basic Login Application</a>\\n\\n        </div>\\n\\n        <div class=\\\"align-content-end\\\">\\n\\n            <div class=\\\"container\\\">\\n\\n                <ul class=\\\"nav nav-tabs\\\" *ngIf=\\\"!isAuthenticated()\\\">\\n\\n                    <li class=\\\"nav-item\\\">\\n                        <a class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\" routerLink=\\\"/signin\\\">Login</a>\\n                    </li>\\n\\n                    <li class=\\\"nav-item\\\">\\n                        <a class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\" routerLink=\\\"/signup\\\">Register</a>\\n                    </li>\\n\\n                </ul>\\n\\n                <ul class=\\\"nav nav-tabs\\\" *ngIf=\\\"isAuthenticated() \\\">\\n\\n                    <li class=\\\"nav-item\\\">\\n                        <a style=\\\"cursor: pointer;  color: lightskyblue;\\\" class=\\\"nav-link\\\" href=\\\"https://github.com/MonikaRavi/Basic-Web-Authentication.git\\\" target=\\\"_blank\\\">\\n                            <img src=\\\"../../assets/GitHub-Mark-32px.png\\\" alt=\\\"GitHub Repository\\\">\\n                        </a>\\n                    </li>\\n\\n                    <li class=\\\"nav-item\\\">\\n                        <a style=\\\"cursor: pointer; color: lightskyblue ;\\\" class=\\\"nav-link\\\" (click)=\\\"onLogOut()\\\">Logout</a>\\n                    </li>\\n\\n                    <li class=\\\"nav-item\\\">\\n                        <a style=\\\"cursor: pointer; color: lightskyblue ;\\\" class=\\\"nav-link\\\" (click)=\\\"onDeleteUser()\\\">Delete User</a>\\n                    </li>\\n\\n                </ul>\\n\\n\\n\\n            </div>\\n        </div>\\n\\n    </div>\\n\\n</nav>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth/auth.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n\n  \n  constructor(private authService : AuthService) { }\n\n  ngOnInit() {\n  }\n\n  isAuthenticated() {\n\n    //console.log(this.authService.isAuthenticated());\n\nreturn this.authService.isAuthenticated() ;\n\n  }\n\n  onLogOut() {\n\n    this.authService.logOut();\n\n  }\n\n  onDeleteUser() {\n\n    this.authService.deleteUser();\n    \n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\" style=\\\"margin-top:30px\\\">\\n    <h4>Logged In As..</h4>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-5 col-sm-4\\\">\\n            <div class=\\\"card\\\">\\n                <div class=\\\"card-header\\\">\\n                    {{ getName() }}\\n                </div>\\n                <div class=\\\"card-body\\\">\\n                     <img [src]=\\\"getPhoto()\\\" [alt]=\\\"getName()\\\" class=\\\"img-responsive\\\" style=\\\"max-height:300px; max-width: 300px;\\\">\\n                    <!-- <img [src]=\\\"base64\\\" [alt]=\\\"getName()\\\" class=\\\"img-responsive\\\" style=\\\"max-height:300px;\\\"> -->\\n                </div>\\n                <div class=\\\"card-footer\\\">\\n                    {{ getEmail() }}\\n                </div>\\n            </div>\\n\\n        </div>\\n\\n    </div>\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../shared/user.service';\n\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n\n  constructor(private userService: UserService) {\n\n  }\n\n \n\n  ngOnInit() {\n\n  \n\n  }\n\n  getName() {\n\n   \n\n    return this.userService.getUserName();\n\n\n  }\n\n\n  getEmail() {\n\n\n\n    return this.userService.getUserEmail();\n\n\n\n\n  }\n\n\n  getPhoto() {\n\n\n    return this.userService.getUserPhoto();\n\n  }\n\n\n  ngOnDestroy() {\n\n    if (this.userService.isMicrosoftUsed()) {\n      this.userService.unsubMsUser();\n    }\n  }\n\n \n\n\n}\n","import { NgModule } from '@angular/core';\n\nimport {  Routes, RouterModule } from '@angular/router' ;\nimport { LoginComponent } from '../auth/login/login.component';\nimport { SignupComponent } from '../auth/signup/signup.component';\nimport { HomeComponent } from '../home/home.component';\nimport { AuthGuard } from './auth-guard.service';\n\n\nconst appRoutes : Routes =[\n\n  {path: '', redirectTo: 'signin', pathMatch: 'full'},\n  {path: 'signin', component: LoginComponent},\n  {path: 'signup', component: SignupComponent},\n  {path: 'home' //, canActivate:[AuthGuard] \n   , component: HomeComponent}\n\n\n]\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(appRoutes)\n  ],\n  exports: [RouterModule]\n})\n\n\nexport class AppRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../auth/auth.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n  constructor( private authService : AuthService) { }\n\n  canActivate(route: ActivatedRouteSnapshot , state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean{\n\n    return this.authService.isAuthenticated();\n\n\n  }\n\n}\n","export const config: any = {\r\n\r\n    // Microsoft Connect Starts\r\n  \r\n  \r\n    appId: '4c7b56aa-34e7-4aa0-804f-d63e07b1dd67',\r\n    scope: 'User.Read Mail.Send'\r\n} ;","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { MSuserService } from './ms-user.service';\r\n\r\n\r\n@Injectable()\r\nexport class ImageService {\r\n\r\n\r\n\r\n  constructor(private httpClient: HttpClient , private msUserService : MSuserService ) { }\r\n\r\n   getImage(imageUrl: string): Observable<Blob> {\r\n\r\n    //  console.log('response defined before get ', this.httpClient.get<Blob>(imageUrl)) ;\r\n\r\n    //  console.log( 'response type inside get ' ,this.httpClient.get(imageUrl, {responseType : 'blob' })) ;\r\n\r\n     return this.httpClient.get(imageUrl, {\r\n       \r\n      headers: new HttpHeaders().set('Authorization', 'Bearer '+ this.msUserService.getToken()),\r\n      \r\n      responseType : 'blob'\r\n    \r\n    }\r\n   )\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n}","import { Injectable } from '@angular/core';\nimport { MSuserService } from './ms-user.service';\nimport { AuthService } from '../auth/auth.service';\nimport { Subscription } from 'rxjs';\n\nimport * as MicrosoftGraph from \"@microsoft/microsoft-graph-types\"\nimport { ImageService } from './image.service';\n\n@Injectable()\nexport class MsUserDetailService {\n\n  \n  me: microsoftgraph.User;  //Profile Information\n  subsGetMe: Subscription;\n  userPhoto: microsoftgraph.User;  //Photo Information\n  subsGetPhoto: Subscription;\n\n  private user;\n\n\n  imageToShow: any;\n  isImageLoading = false;\n\n   private graphUri = \"https://graph.microsoft.com/v1.0/me/photo/$value\";\n\n\n  constructor(private msUserService: MSuserService , private imageService : ImageService) { }\n\n \n  getMeMs(){\n\n   \n      this.subsGetMe = this.msUserService.getMe().subscribe(me => this.me = me);\n    }\n\n\n  \n\n  unsubMe() {\n\n    this.subsGetMe.unsubscribe();\n\n  }\n\n  getEmail(){\n\n    return this.me.userPrincipalName;\n\n  }\n\n  getUserName() {\n\n    return this.me.displayName;\n  }\n\n  // Microsoft graph API returns a blob data which is converted into image\n\n  createImageFromBlob(image: Blob) {\n    let reader = new FileReader();\n    reader.addEventListener(\"load\", () => {\n\n     //console.log(reader.result);\n       this.imageToShow = reader.result;\n    }, false);\n \n    if (image) {\n       reader.readAsDataURL(image);\n    }\n }\n\n getImageFromService() {\n   this.isImageLoading = true;\n   this.imageService.getImage(this.graphUri).subscribe(data => {\n     //console.log(data);\n     this.createImageFromBlob(data);\n     this.isImageLoading = false;\n     \n   }, error => {\n     this.isImageLoading = false;\n     console.log(error);\n   });\n\n   return this.imageToShow ;\n}\n\n\n}\n","import { Injectable } from '@angular/core';\n\n\n// Microsoft Graph to handle User Information\n\nimport * as MicrosoftGraph from \"@microsoft/microsoft-graph-types\"\nimport * as MicrosoftGraphClient from \"@microsoft/microsoft-graph-client\"\nimport { Observable } from 'rxjs';\nimport { from } from 'rxjs';\nimport { HttpService } from '../auth/http.service';\n\n\n\n@Injectable()\nexport class MSuserService {\n\n  constructor(private httpService : HttpService) { }\n\n \n\n  getClient(): MicrosoftGraphClient.Client\n  {\n    var client = MicrosoftGraphClient.Client.init({\n      authProvider: (done) => {\n          done(null, this.httpService.getAccessToken()); //first parameter takes an error if you can't get an access token\n      }\n    });\n    return client;\n  }\n\n \n  getMe(): Observable<MicrosoftGraph.User>\n  {\n    var client = this.getClient();\n\n    // console.log( 'Client ',client);\n\n     return from(client\n    .api('me')\n    .select(\"displayName, userPrincipalName, id, mail\")\n    .get()\n    .then ((res => {\n\n      // console.log(res);\n      return res;\n    } ) )\n    );\n  }\n\n\ngetToken() {\n\n  return this.httpService.getAccessToken();\n\n}\n\n\n}\n","import { Injectable, OnInit } from '@angular/core';\nimport { AuthService } from '../auth/auth.service';\nimport * as firebase from 'firebase';\nimport { MSuserService } from './ms-user.service';\nimport { Subscription, observable, Observable } from 'rxjs';\n\nimport { map, catchError } from 'rxjs/operators'\n\nimport * as MicrosoftGraph from \"@microsoft/microsoft-graph-types\"\n\n\nimport { DomSanitizer } from \"@angular/platform-browser\";\n\nimport { ContentType } from '@angular/http/src/enums';\nimport { Promise } from 'es6-promise';\nimport { ImageService } from './image.service';\nimport { MsUserDetailService } from './ms-user-detail.service';\n\ndeclare const Buffer;\n\n@Injectable()\nexport class UserService {\n\n\n\n\n  constructor(private authService: AuthService, private userDetailMs: MsUserDetailService) {\n\n  }\n\n\n  isMicrosoftUsed() {\n\n    return this.authService.getMSuse();\n  }\n\n  getMicrosoftUser() {\n\n    if (this.authService.getMSuse()) {\n\n      this.userDetailMs.getMeMs();\n\n    }\n\n  }\n\n\n  unsubMsUser() {\n\n    this.userDetailMs.unsubMe();\n  }\n\n\n  getUserName() {\n\n    if (this.authService.getFirebaseUse()) {\n\n      return firebase.auth().currentUser.displayName;\n\n    }\n    else {\n\n\n      return this.userDetailMs.getUserName();\n\n\n    }\n\n\n\n  }\n\n\n  getUserEmail() {\n\n    if (this.authService.getFirebaseUse()) {\n\n      return firebase.auth().currentUser.email;\n\n    }\n    else {\n      return this.userDetailMs.getEmail();\n    }\n\n\n\n\n  }\n\n  getUserPhoto() {\n\n    if (this.authService.getFirebaseUse()) {\n\n      return firebase.auth().currentUser.photoURL;\n\n    }\n    else {\n\n      return this.userDetailMs.getImageFromService();\n\n\n    }\n\n  }\n\n\n\n\n\n}\n\n\n\n\n\n\n\n\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}